@model Plims.ViewModel.ViewModelAll

@{
    ViewBag.Title = "EmployeeManagement";
}
@* 
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link href="~/css/w3.css" rel="stylesheet" />
<link href="~/css/jquery.datatables.min.css" rel="stylesheet" />
<link href="~/css/select2.min.css" rel="stylesheet" />
<script src="~/js/bootstrap.min.js"></script>
<script src="~/js/select2.min.js"></script>
<link href="~/css/main.css" rel="stylesheet" />
<link href="~/css/datatable2.0.1.css" rel="stylesheet" />
<script src="~/js/qrcode.min.js"></script>
<script src="path/to/qrcode-generator.js"></script>
<script src="~/js/table2excel.js"></script> *@

<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
<link href="~/css/datatable2.2.0.css" rel="stylesheet" />



<style>
    .container {
        text-align: center;
        position: relative;
        width: 200px; /* Adjust width to fit your QR code image */
        height: 200px; /* Adjust height to fit your QR code image */
    }

    .qrcode {
        display: block;
        margin: 0 auto;
        width: 100%;
        height: 100%;
    }

    .label {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        background-color: rgba(255, 255, 255, 0.8); /* Adjust background color and opacity as needed */
        padding: 5px;
        box-sizing: border-box;
    }



    #table_id {
        border: 0.1px solid #A9A9A9; /* Set border style */
        border-collapse: collapse;
        width: 100%;
    }

        #table_id th {
            background-color: #C5C5C5; /* Set your desired header background color */
            font-weight: bold;
            text-align: center;
            font-family: Arial, sans-serif;
            font-size: 14px;
            padding: 15px 0px;
            border-collapse: collapse;
        }

        #table_id td {
            text-align: left;
            font-size: 14px;
        }

        #table_id tr {
            text-align: left;
            padding: initial;
        }

        #table_id th,
        #table_id td {
            border: 0.1px solid #A9A9A9; /* Set border style */
            border-collapse: collapse;
        }

    .dataTables_scrollHeadInner,
    .table {
        width: 100% !important;
    }
</style>


@* @if (ViewBag.MessageAlert != null)
    {  
        <script type="text/javascript">  
            window.onload = function () {  
                alert("@ViewBag.MessageAlert");  
            };  
        </script>  
    }   *@


<div class="row" style="height:10px"></div>
<h2 class="page-name">Employee Management</h2>

<form method="get" asp-controller="Master">

    <div class="row">
        <div class="col-2" style=" padding-top:0.5em"><label class="FillterLabel"> Employee ID:</label></div>
        <div class="col-3">
        @*     <select class="selectfillter form-control" style="width:100%" name="EmployeeID" id="EmployeeID">
                <option value="" default selected></option>
                @foreach (var item in Model.tbEmployeeMaster)
                {

                    <option>@Html.DisplayFor(modelItem => item.EmployeeID) </option>
                }
            </select> *@

            
            <select class="selectfillter form-control" style="width:100%" name="EmployeeID" id="EmployeeID">
                <option value="" default selected></option>
                @foreach (var item in Model.view_EmployeeMaster.GroupBy(x => x.EmployeeID))
                {
                    var dataitem = item.First(); // Take the first item in the group
                    <option value="@dataitem.EmployeeID" selected="@(dataitem.EmployeeID == ViewBag.SelectedEmployeeID ? "selected" : null)">
                        @Html.DisplayFor(modelItem => dataitem.EmployeeID)
                    </option>

                }


            </select>




        </div>
        <div class="col-1"></div>
        <div class="col-2" style=" padding-top:0.5em"><label class="FillterLabel"> Section Name  :</label></div>
        <div class="col-3">
            @* <select class="selectfillter form-control" style="width:100%" name="SectionName" id="SectionName">
                <option value="" default selected></option>
                @foreach (var item in Model.tbSection)
                {
                    <option>@Html.DisplayFor(modelItem => item.SectionName) </option>
                }
            </select> *@
            <select class="selectfillter form-control" style="width:100%" name="SectionName" id="SectionName">
                <option value="" default selected></option>
                @foreach (var item in Model.view_EmployeeMaster.GroupBy(x => x.SectionName))
                {
                    var dataitem = item.First(); // Take the first item in the group
                    <option value="@dataitem.SectionName" selected="@(dataitem.SectionName == ViewBag.SelectedSectionName ? "selected" : null)">
                        @Html.DisplayFor(modelItem => dataitem.SectionName)
                    </option>

                }


            </select>

        </div>

    </div>
    <div class="row" style="height:10px"></div>
    <div class="row">
        <div class="col-2" style=" padding-top:0.5em"><label class="FillterLabel"> Line Name:</label></div>
        <div class="col-3">
            @* <select class="selectfillter form-control" style="width:100%" name="LineName" id="LineName">
                <option value="" default selected></option>
                @foreach (var item in Model.tbLine)
                {

                    <option>@Html.DisplayFor(modelItem => item.LineName) </option>
                }
            </select> *@


             <select class="selectfillter form-control" style="width:100%" name="LineName" id="LineName">
                <option value="" default selected></option>
                @foreach (var item in Model.view_EmployeeMaster.GroupBy(x => x.LineName))
                {
                    var dataitem = item.First(); // Take the first item in the group
                    <option value="@dataitem.LineName" selected="@(dataitem.LineName == ViewBag.SelectedLineName ? "selected" : null)">
                        @Html.DisplayFor(modelItem => dataitem.LineName)
                    </option>

                }


            </select>


        </div>
        <div class="col-1"></div>
        <div class="col-2" style=" padding-top:0.5em"><label class="FillterLabel"> Shift name :</label></div>
        <div class="col-3">
           @*  <select class="selectfillter form-control" style="width:100%" name="ShiftName" id="ShiftName">
                <option value="" default selected></option>
                @foreach (var item in Model.tbShift)
                {
                    <option>@Html.DisplayFor(modelItem => item.ShiftName) </option>
                }
            </select>
 *@
            
             <select class="selectfillter form-control" style="width:100%" name="ShiftName" id="ShiftName">
                <option value="" default selected></option>
                @foreach (var item in Model.view_EmployeeMaster.GroupBy(x => x.ShiftName))
                {
                    var dataitem = item.First(); // Take the first item in the group
                    <option value="@dataitem.ShiftName" selected="@(dataitem.ShiftName == ViewBag.SelectedShiftName ? "selected" : null)">
                        @Html.DisplayFor(modelItem => dataitem.ShiftName)
                    </option>

                }


            </select>


        </div>

    </div>

    <div class="row" style="height:20px"></div>


    @* //Inactive Checkbox *@
    <div class="row ">
        <div class="col-2" style=" padding-top:0.5em"></div>
        <div class="col-3">
            @{
                // Determine if the checkbox should be checked based on ViewBag.InactiveStatus
                string checkedAttribute = (ViewBag.InactiveStatus ?? false) ? "checked" : "";
            }

            <div class="form-check form-switch">
                <input class="form-check-input" type="checkbox" id="inactivestatus2" name="inactivestatus" @checkedAttribute>
                <label class="form-check-label" for="inactivestatus">Inactive Status</label>
                <input type="hidden" id="inactivestatus-hidden" name="inactivestatus" value="@((ViewBag.InactiveStatus ?? false).ToString().ToLower())">
            </div>
        </div>
        <div class="col-6"></div>
    </div>


    <div class="row" style="height:20px"></div>
 


    <div class="row" style="height:10px"></div>
    <div class="row" style="height:35px">

        <div class="col" style="width:15% ">
            <button id="Clear" type="submit" asp-action="EmployeeManagementClear" name="submit" value="begin" class="clear-button">
                Clear
            </button>
        </div>
        <div class="col-3" style="width:40% ">
        </div>
        <div class="col-3" style="width:15% ">
     @*        <button id="Group" type="submit" href="@Url.Action("EmployeeGroupQRCode", "Master")" name="button"  class="search-button">
                Employee Group
            </button> *@
            <button type="submit" onclick="redirectToEmployeeGroup();" class="search-button">Employee Group</button>


        </div>

        <div class="col" style="width:15% ">
            <button id="Search" type="submit" asp-action="EmployeeManagement" name="submit" value="begin" class="search-button">
                Search
            </button>
        </div>
        <div class="col" style="width:15% ">

            @if (ViewBag.VBRoleEmployee == "Full")
            {
                <button type="button" class="create-button" data-bs-toggle="modal" data-bs-target="#CreateModal">Create</button>

            }
            else
            {
                <button type="button" class="create-button" style=" justify-content: flex-end ">Create</button>

            }

        </div>



       </div>
     
<br />


@*Diaplay data*@

    <table id="table_id" class="table table-hover" style="width:100%">
        <thead style="background-color:gainsboro;width:100%">
        <tr>
            @*<th><input type="checkbox" id="checkall" /></th>*@
            <th>
                Employee ID
            </th>
            <th >
                Employee Name
            </th>
            <th >
                Plant Name
            </th>
            <th >
                Line Name
            </th>
            <th >
                Section Name
            </th>
            <th >
                Shift
            </th>
            <th>
                Status
            </th>
                <th>
                    Edit
                </th>
                <th>
                    Active/Inactive
                </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.view_EmployeeMaster)
        {
            <tr>
                @Html.HiddenFor(modelItem => item.ID)
                @*<td><input type="checkbox" class="checkthis" /></td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.EmployeeID)
                </td>
                <td>
                        @Html.DisplayFor(modelItem => item.EmployeeName)  @Html.DisplayFor(modelItem => item.EmployeeLastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PlantName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LineName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SectionName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ShiftName)
                </td>

                @if (item.Status == 1)
                {
                    <td id="Status"> <span id="open">Active</span> </td>
                    <td>
                        <a href="#" data-bs-toggle="modal" data-bs-target="#EditModal" id="btnEdit" data-id="@item.ID" onclick="EditFn(@item.ID)">Edit</a>
                    </td>

                    <td >
                        <a href="#" id="Inactive" onclick="InactiveFn(@item.ID)">Inactive</a>
                    </td>

                }
                @if (item.Status == 0)
                {
                    <td id="Status"><span id="closed" style="color:red">Inactive</span></td>
                    <td>
                        <span id="closed">Edit</span>
                    </td>
                    <td>
                        <a href="#" id="Active" onclick="ActiveFn(@item.ID)">Active</a>
                    </td>
                }


            </tr>
        }
    </tbody>
</table>


@* /////////////////////////// Export / Import /////////////////////// *@


        <br>
          <div class="row" style="height:40px">
         <div class="col-2" style="width:50% "></div>
        <div class="col" style="width:70% ">
            @if (ViewBag.VBRoleEmployee == "Full")
            {
                <button class="search-button" id="btnRegenerate" type="Submit" asp-action="EmployeeRegenerate" value="Regenerate" name="submit">Regenerate</button>
            }
            else
            {
                <button class="search-button">Regenerate</button>
            }
        </div>
        <div class="col" style="width:15% ">
        @if (ViewBag.VBRoleEmployee == "Full")
            {
                <button class="search-button" id="btnExport" type="Submit"  asp-action="EmployeeExport" value="export" name="submit">Export</button>
            }
            else
            {
                <button class="search-button">Export</button>
            }
        </div>
        <div class="col" style="width:15% ">
        @if (ViewBag.VBRoleEmployee == "Full")
            {

                <button type="button" class="clear-button" id="btnSelectFile">Import</button>
                <input type="file" id="FileUpload" name="FileUpload" class="hidden-file-input" style="display: none" />

            }
            else
            {

                <button type="button" class="clear-button">Import</button>

            }
           
        </div>
    </div>

</form>



<div class="row" style="height:10px">
</div>


@if (ViewBag.QRCodeGenerated != null && ViewBag.QRCodeGenerated)
{
    <script>
        $(document).ready(function () {
            // Show the modal if QR code is generated
            $('#CreateModal').modal('show');
        });
    </script>
}

@*Modal Create*@
<div class="modal fade bd-example-modal-lg" id="CreateModal" tabindex="-1" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form method="post" controller="Master" asp-action="EmployeeCreate">
       @*          <form method="get" controller="Master" action="EmployeeCreate"> *@
                @* *@
                <div class="modal-header" style="background-color:blue">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Employee Create</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col">

                            <div class="row">
                                <div class="col-md-12">
                                    <label class="col-form-label">Employee ID:</label>
                                    <input class="form-control" name="EmployeeID" id="EmployeeIDCreate" style="width:100%" value="@ViewBag.EmployeeID">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <label class="col-form-label">Employee Name:</label>
                                    <input class="form-control" name="EmployeeName" id="EmployeeNameCreate" style="width:100%" >
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <label class="col-form-label">Employee Last:</label>
                                    <input class="form-control" name="EmployeeLastName" id="EmployeeLastNameCreate" style="width:100%">
                                </div>
                            </div>
                        </div>

                        <div class="col-3">
                            <div class="container">
                        @*     <img src="@ViewData["QrCodeUri"]" class="img-thumbnail" /> *@
                            <img id="QRCodeImage" src="" class="img-thumbnail" style="display: none;" />
                              
                            </div>
                        </div>
                        <input type="hidden" id="QrCodeUri" />
                    </div>

                    @* Line Name*@
                    <div class="mb-3">
                        <label class="col-form-label">Line Name:</label>
                      @*   <select class="selectfillter form-control" name="LineName" id="LineNameCreate" style="width:100%" onchange="filterSectionByLine()">
                            <option value="" default selected>Please Select ..</option>
                            @foreach (var item in Model.tbLine.Where(x=>x.Status.Equals(1)))
                            {

                                <option value="@item.LineID">@Html.DisplayFor(modelItem => item.LineName) </option>
                            }
                        </select> *@

                        
                        <select class="selectfillter form-control" style="width:100%" name="LineName" id="LineNameCreate" onchange="filterSectionByLine()" required>
                            <option value="" default selected></option>
                            @foreach (var dataGroup in Model.view_PLPS.Where(x => x.Status.Equals(1)).GroupBy(x => x.LineID))
                            {
                                var dataFrist = dataGroup.First(); // Take the first item in the group
                                <option value="@dataFrist.LineID">
                                    @Html.DisplayFor(modelItem => dataFrist.LineName)
                                </option>

                            }
                        </select>


                    </div>


                    @* Section Name*@
                    <div class="mb-3">
                        <label class="col-form-label">Section Name:</label>
                  @*       <select class="selectfillter form-control" name="SectionName" id="SectionNameCreate" style="width:100%" >
                            <option value="" default selected>Please Select ..</option>
                            @foreach (var item in Model.tbSection.Where(x => x.Status.Equals(1)))
                            {

                                <option value="@item.SectionID">@Html.DisplayFor(modelItem => item.SectionName) </option>
                            }
                        </select>
 *@

                        <select class="selectfillter form-control" style="width:100%" name="SectionID" id="SectionNameCreate" required>
                            <option value="" default selected></option>
                            @foreach (var dataGroup in Model.view_PLPS.Where(x => x.Status.Equals(1)).GroupBy(x => x.SectionID))
                            {
                                var dataFrist = dataGroup.First(); // Take the first item in the group
                                <option value="@dataFrist.SectionID">
                                 @Html.DisplayFor(modelItem => dataFrist.SectionID)  @Html.DisplayFor(modelItem => dataFrist.SectionName)
                                </option>

                            }
                        </select>


                    </div>

                    @* Shift Name*@
                    <div class="mb-3">
                        <label class="col-form-label">Shift Name:</label>
                        <select class="selectfillter form-control" name="ShiftName" id="ShiftNameCreate" style="width:100%" required>
                            <option value="" default selected>Please Select ..</option>
                            @foreach (var item in Model.tbShift.Where(x => x.Status.Equals(1)))
                            {

                                <option value="@item.ShiftID">
                                    @Html.DisplayFor(modelItem => item.ShiftName) : @Html.DisplayFor(modelItem => item.StartTime) - @Html.DisplayFor(modelItem => item.EndTime)
                                    </option>
                            }
                        </select>
                    </div>


               @*      <div class="mb-3">
                        <label class="col-form-label">QRCodePerEmployee :</label>
                        <input class="form-control" name="QRCodePerEmployee" id="QRCodePerEmployeeCreate" style="width:100%">
                    </div>
 *@
         @*            <div class="mb-3">
                        <input class="form-check-input" rel="active" type="checkbox" id="StatusCreate" name="Status" value="1" checked>
                        <label class="form-check-label" for="flexSwitchCheckChecked">Status</label>

                    </div> *@

                                        <div class="form-check form-switch">
                        <input class="form-check-input" rel="active" type="checkbox" id="StatusCreate" name="Status" value="1" checked>
                        <label class="form-check-label" for="flexSwitchCheckChecked">Status</label>
                    </div>

                    <div class="modal-footer">
                        <input type="button" value="Generate QR Code" onclick="generateQRCode()" class="btn btn-primary text-center" />
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" >Cancel</button>
                        <button type="submit" class="btn btn-primary" name="submit" value="Enter" >Submit</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@*Modal Update*@
<div class="modal fade bd-example-modal-lg" id="EditModal" tabindex="-1" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <form method="Post" controller="Master" action="EmployeeUpdate">
                  @*  *@
                <div class="modal-header" style="background-color:blue">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Employee Edit</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">


                    @* Incentive ID *@

                    <div class="row">
                        <div class="col">

                            <div class="row">
                                <div class="col-md-12">
                                    <label class="col-form-label">Employee ID:</label>
                                    <input class="form-control" asp-for="QRCodeText" name="EmployeeID" id="ModalEmployeeID">
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <label class="col-form-label">Employee Name:</label>
                                    <input class="form-control" name="EmployeeName" id="ModalEmployeeName" required>
                                </div>
                            </div>
                              <div class="row">
                                <div class="col-md-12">
                                    <label class="col-form-label">Employee Last:</label>
                                    <input class="form-control" name="EmployeeLastName" id="ModalEmployeeLastName" required>
                                </div>
                            </div>
                        </div>

                       <div class="col-3" style="max-width: 100px; max-height: 100px;">
                            <img alt="QRImg" id="modalImage" style="width: 100%; height: auto;" />
                        </div>

                    </div>


                    @* Line Name*@
                    <div class="mb-3">
                        <label class="col-form-label">Line Name:</label>
                    @*     <select class="selectfillter form-control" name="LineID" id="ModalLineName" style="width:100%">
                            <option value="" default selected></option>
                            @foreach (var item in Model.tbLine)
                            {

                                <option value="@item.LineID">@Html.DisplayFor(modelItem => item.LineID) :  @Html.DisplayFor(modelItem => item.LineName) </option>
                            }
                        </select>
 *@

                        <select class="selectfillter form-control" style="width:100%" name="LineName" id="ModalLineName" required>
                            <option value="" default selected></option>
                            @foreach (var dataGroup in Model.view_PLPS.Where(x => x.Status.Equals(1)).GroupBy(x => x.LineID))
                            {
                                var dataFrist = dataGroup.First(); // Take the first item in the group
                                <option value="@dataFrist.LineID">
                                    @Html.DisplayFor(modelItem => dataFrist.LineName)
                                </option>

                            }
                        </select>


                    </div>


                    @* Section Name*@
                    <div class="mb-3">
                        <label class="col-form-label">Section Name:</label>
                      @*   <select class="selectfillter form-control" name="SectionID" id="ModalSectionName" style="width:100%">
                            <option value="" default selected></option>
                            @foreach (var item in Model.tbSection)
                            {

                                <option value="@item.SectionID">@Html.DisplayFor(modelItem => item.SectionID)  : @Html.DisplayFor(modelItem => item.SectionName) </option>
                            }
                        </select> *@


                        <select class="selectfillter form-control" style="width:100%" name="SectionID" id="ModalSectionName" required>
                            <option value="" default selected></option>
                            @foreach (var dataGroup in Model.view_PLPS.Where(x => x.Status.Equals(1)).GroupBy(x => x.SectionID))
                            {
                                var dataFrist = dataGroup.First(); // Take the first item in the group
                                <option value="@dataFrist.SectionID">
                                  @Html.DisplayFor(modelItem => dataFrist.SectionName)
                                </option>

                            }
                        </select>
                    </div>

                    @* Shift Name*@
                    <div class="mb-3">
                        <label class="col-form-label">Shift Name:</label>
                       @*  <select class="selectfillter form-control" name="ShiftID" id="ModalShiftName" style="width:100%">
                            <option value="" default selected></option>
                            @foreach (var item in Model.tbShift)
                            {

                                <option value="@item.ShiftID">@Html.DisplayFor(modelItem => item.ShiftName) </option>
                            }
                        </select> *@

                        <select class="selectfillter form-control" style="width:100%" name="ShiftID" id="ModalShiftName" required>
                            <option value="" default selected></option>
                            @foreach (var dataGroup in Model.tbShift.Where(x => x.Status.Equals(1)).GroupBy(x => x.ShiftID))
                            {
                                var dataFrist = dataGroup.First(); // Take the first item in the group
                                <option value="@dataFrist.ShiftID">
                                    @Html.DisplayFor(modelItem => dataFrist.ShiftName) : @Html.DisplayFor(modelItem => dataFrist.StartTime) - @Html.DisplayFor(modelItem => dataFrist.EndTime)
                                </option>

                            }
                        </select>


                    </div>

@* 
                    <div class="mb-3">

                        <label class="col-form-label">QRCodePerEmployee :</label>
                        <input class="form-control" name="Contact" id="ModalQRCodePerEmployee">

                    </div>
 *@
@* 
                    <div class="mb-3">
                        <input class="form-check-input" rel="active" type="checkbox" id="ModalStatus" name="Status" value="1">
                        <label class="form-check-label" for="flexSwitchCheckChecked">Status</label>

                    </div> *@
                    <div class="form-check form-switch">
                        <input class="form-check-input" rel="active" type="checkbox" id="ModalStatus" name="Status" value="1">
                        <label class="form-check-label" for="flexSwitchCheckChecked">Status</label>
                    </div>


                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="Submit" class="btn btn-primary">Submit</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>


<script>

        $(document).ready(function () {
        var table = $('#table_id').DataTable({
            dom: 'Bfrtip',
            ordering: false,
            searching: false,
            scrollX: true,
            scrollY: true,
            // order: [[1, 'asc']],
            lengthMenu: [10, 25, 50, 75, 100],
            pageLength: 20, // Default page length
            paging: true, // Enable paging
        });

    });

    // Ensure that the checkbox state is included in the form submission
    document.getElementById("inactivestatus").addEventListener("change", function () {
        if (this.checked) {
            // Set the value of the hidden input field to "true" when checked
            document.getElementById("inactivestatus-hidden").value = "true";
        } else {
            // Set the value of the hidden input field to "false" when unchecked
            document.getElementById("inactivestatus-hidden").value = "false";
        }
    });

    function generateQRCode() {
        var employeeID = $('#EmployeeIDCreate').val(); // Get the employee ID from the input field
        console.log(employeeID)
        $.ajax({
            url: '@Url.Action("CreateQRCode", "Master")', // Specify the controller action URL
            type: 'POST',
            data: { employeeID: employeeID }, // Send the employee ID to the controller
            success: function (response) {
                // Update the QR code image source
                $('#QRCodeImage').attr('src', response);
                
                // Optionally, update other elements in the modal as needed
                $('#QRCodeImage').show(); // Show the QR code image
                $('#QrCodeUri').val(response); // Set the QR code URI to a hidden input field
                $('#generateButton').prop('disabled', true); // Disable the "Generate QR Code" button
                // You can add more actions here based on your requirements
            }
        });
    }








</script>



<script type="text/javascript" charset="utf8">

    
    // $(function () {
    //     $("#btnExport").click(function () {
    //         $("#table_id").table2excel({
    //             filename: "Employee-Master.xls"
    //         });
    //     });
    // });

    $(document).ready(function () {
        $('#EditModal').on('shown.bs.modal', function () {
            // Get the value of the Employee ID input field
            var employeeID = $('#ModalEmployeeID').val();

            // Construct the URL for the QR code image
            var qrCodeUrl = '@Url.Content("~/qrcodes/")' + employeeID + '_QRCode.png';

            // Set the src attribute of the img tag to the constructed URL
            $('#modalImage').attr('src', qrCodeUrl);
        });
    });


    // $(document).ready(function () {
    //     $('#btnExport').click(function () {
    //         var $table = $('#table_id');

    //         // Clone the table to preserve the original
    //         var $clonedTable = $table.clone();

    //         // Remove unwanted columns (in this case, remove second column)
    //         $clonedTable.find('tr').each(function () {
    //             $(this).find('th:eq(7), td:eq(7)').remove();
    //             $(this).find('th:eq(6), td:eq(6)').remove();
    //            // $(this).find('td:eq(4)').remove();

    //         });

    //         // Export the modified table using table2excel
    //         $clonedTable.table2excel({
    //             exclude: ".noExl", // Exclude elements with class "noExl"
    //             name: "Worksheet Name",
    //             filename: "Employee-Master"
    //         });
    //     });
    // });



     function redirectToEmployeeGroup() {
        event.preventDefault(); // Prevent default form submission
        location.href = '@Url.Action("EmployeeGroupQRCode", "Master")'; // Redirect to the specified URL
    }


       $(document).ready(function () {
        $('#btnSelectFile').on('click', function () {
            $('#FileUpload').click();
        });

        $('#FileUpload').on('change', function () {
            var selectedFile = this.files[0];

            // Create FormData object
            var formData = new FormData();
            formData.append('FileUpload', selectedFile);  // Use the correct name

            // Send the file to the controller using AJAX
            $.ajax({
                url: '/Master/EmployeeManagementUpload',
                type: 'POST',
                processData: false,
                contentType: false,  // Set this to false when using FormData
                data: formData,
                success: function (data, status, xhr) {
                    // Handle success
                    console.log(data);
                    location.reload();
                    // Trigger the download process or perform other actions
                },
                error: function (xhr, status, error) {
                    // Handle error
                    console.error('Error uploading file:', error);
                }
            });
        });
    });

    document.getElementById("generateBtn").addEventListener("click", function () {
        // Retrieve the employee ID and other data
        var employeeId = document.getElementById("EmployeeIDCreate").value;
     
        // Create a JSON object with the data
        var data = {
            EmployeeId: employeeId    
        };

        // Make an AJAX request to generate and save the QR code
        fetch('/MasterController/GenerateQRCode', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
            .then(response => response.json())
            .then(result => {
                // Set the QR code image source
                document.getElementById("ImgQRCode").src = result.qrCodeImagePath;
                // Display the image
                document.getElementById("ImgQRCode").style.display = "block";
            })
            .catch(error => console.error('Error during QR code generation:', error));
    });



        //Function Inactive
        function InactiveFn(id) {
            $.ajax({
                url: '/Master/EmployeeInactive/' + id,
                type: 'GET',
                contentType: 'application/json;charset=UTF-8',
                dataType: 'json',
                success: function (response) {
                location.reload();
                    alert("Inactive Finish");
                },
                error: function (response) {
                    alert("Inactive something went wrong.");
                }

            });
        }


        //Function Active
        function ActiveFn(id) {
            $.ajax({
                url: '/Master/EmployeeActive/' + id,
                type: 'GET',
                contentType: 'application/json;charset=UTF-8',
                dataType: 'json',
                success: function (response) {
                location.reload();
                    alert("Active Finish");
                },
                error: function (response) {
                    alert("Active something went wrong.");
                }

            });
        }


        //Edit to modal
        function EditFn(ID) {
            $.ajax({
                url: '/Master/EmployeeEdit/' + ID,
                type: 'GET',
                contentType: 'application/json;charset=UTF-8',
                dataType: 'json',
                success: function (response) {

                    if (response == null || response == undefined) {

                        alert("This data can't read1!")
                    }
                    else if (response.length == 0) {

                        alert("This data can't id!" + id)
                    }
                    else {
                        console.log('AJAX request successful:', response);
                        $('#ModalEmployeeID').val(response.employeeID);
                        $('#ModalEmployeeName').val(response.employeeName)
                              $('#ModalEmployeeLastName').val(response.employeeLastName)
                     //   $('#ModalPlantName').append('<option value="' + response.plantID + '">' + response.plantName + '</option>');
                    $('#ModalPlantName').val(response.plantID).trigger('change');

                   // $('#ModalLineName').append('<option value="' + response.lineID + '">' + response.lineName + '</option>');
                    $('#ModalLineName').val(response.lineID).trigger('change');


                      //  $('#ModalSectionName').append('<option value="' + response.sectionID + '">' + response.sectionName + '</option>');
                    $('#ModalSectionName').val(response.sectionID).trigger('change');

                  //  $('#ModalShiftName').append('<option value="' + response.shiftID + '">' + response.shiftName + '</option>');
                    $('#ModalShiftName').val(response.shiftID).trigger('change');
                                 $('#ModalStatus').prop('checked', response.status == 1)
                       // $('#ModalShiftName').val(response.shiftName);
                        $('#ModalQRCodePerEmployee').val(response.qrCodePerEmployee);
                        // $('#modalImage').attr('src', "D:\\PLIMS PROJECT\\Plims_9\\QRCode\\TU01.png");

                           var employeeID = $('#ModalEmployeeID').val();

                         // Construct the URL for the QR code image
                            var qrCodeUrl = '@Url.Content("~/qrcodes/")' + employeeID + '_QRCode.png';
                             console.log('QR path : ' + qrCodeUrl)
                        // Set the src attribute of the img tag to the constructed URL
                        $('#modalImage').attr('src', qrCodeUrl);


                        // $('#modalImage').attr('src', "'D:\PLIMS PROJECT\Plims_9\QRCode\'" + response.employeeID + "'.png'");
                        $('#EditModal').modal('show');

                    }
                },
                error: function (response) {
                    alert(response.responseText);
                }

            });
        }

        // Function to fetch and set the image source
        function loadEmployeeImage(employeeID) {
            // Assuming you have a route in your controller to get the image, adjust the URL accordingly
            var imageUrl = "/Image/GetImage?imageName=" + employeeID + ".png";

            // Set the image source
            document.getElementById("ImgQRCode").src = imageUrl;
        }

        // Assuming you have a button or element to trigger the modal
        document.getElementById("GenerateQRBtn").addEventListener("click", function () {
            // Get the employee ID from your model or wherever it's stored
            var employeeID = document.getElementById("EmployeeIDCreate").value; // Replace with the actual employee ID

            // Load the image when the modal is triggered
            loadEmployeeImage(employeeID);
        });


    
    /// Fillter Create
    function filterSectionByLine() {
        // Clear previous options
        $("#SectionNameCreate").empty();;
        // Add a default option
        $("#SectionNameCreate").append("<option value='' default selected>Please Select ..</option>");
        // Get the selected Line ID

        var selectedLineID = $("#LineNameCreate").val().toString();
        // Check if a line is selected
        if (selectedLineID !== "") {
            // Use AJAX to filter products based on the selected Line ID
            $.ajax({
                type: "GET",
                url: "/Master/FilterSectionByLine", // Update the URL to your controller action
                data: { lineId: selectedLineID },
                success: function (filteredProducts) {
                   
                    // Add filtered products to the dropdown
                    filteredProducts.forEach(function (product) {
                        $("#SectionNameCreate").append("<option value='" + product.sectionID + "'>" + product.sectionID + " : " + product.sectionName + "</option>");

                    });
                },
                error: function (error) {
                    console.log("Error filtering products: " + error);
                }
            });
        }
    }




</script>

