@model Plims.ViewModel.ViewModelAll
@using Microsoft.AspNetCore.Http
@{
    ViewBag.Title = "PLPS";
    //TbUser user = Utilities.GetCurrentUser();
    string PlantID = Context.Session.GetString("PlantID");
}


@if (TempData.ContainsKey("AlertMessage"))
{
    <script>
        alert('@TempData["AlertMessage"]');
    </script>
}


<script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.11.5/js/dataTables.bootstrap5.min.js"></script>
<link href="~/css/datatable2.2.0.css" rel="stylesheet" />

<style type="text/css">

    .form-control {
        width: 100%;
        height: 70%;
        padding: 6px 10px;
        margin: 8px 0;
        display: inline-block;
        border: 1px solid #2D2828;
        border-radius: 1px;
        box-sizing: border-box;
    }

    #table_id {
        border: 0.1px solid #A9A9A9; /* Set border style */
        border-collapse: collapse;
        width: 100%;
    }

        #table_id th {
            background-color: #C5C5C5; /* Set your desired header background color */
            font-weight: bold;
            text-align: center;
            font-family: Arial, sans-serif;
            font-size: 14px;
            padding: 15px 0px;
            border-collapse: collapse;
        }

        #table_id td {
            text-align: left;
            font-size: 14px;
        }

        #table_id tr {
            text-align: left;
            padding: initial;
        }

        #table_id th,
        #table_id td {
            border: 0.1px solid #A9A9A9; /* Set border style */
            border-collapse: collapse;
        }

    .dataTables_scrollHeadInner,
    .table {
        width: 100% !important;
    }
</style>

<script type="text/javascript" charset="utf8">

    $(document).ready(function () {
        var table = $('#table_id').DataTable({
            dom: 'Bfrtip',
            ordering: false,
            searching: false,
            scrollX: true,
            scrollY: true,
            // order: [[1, 'asc']],
            lengthMenu: [10, 25, 50, 75, 100],
            pageLength: 20, // Default page length
            paging: true, // Enable paging
        });

    });

    //Edit to modal
    function EditFns(ID) {
        console.log('IDs:', ID);
        $.ajax({
            url: '/Master/PLPSEdit/' + ID,
            type: 'GET',
            contentType: 'application/json;charset=UTF-8',
            dataType: 'json',
            success: function (response) {
                if (response == null || response == undefined) {
                    console.log('AJAX request unsuccessful:', response);
                    alert("This data can't read1!")
                }
                else if (response.length == 0) {

                    alert("This data can't id!" + PLPSID)
                }
                else {
                    console.log('AJAX request successful:', response);
                    $('#ModalPLPSID').val(response.plpsid);
                    
                    // $('#ModalPlantName').append('<option value="' + response.plantName + '">' + response.plantName + '</option>');
                    // $('#ModalPlantName').val(response.plantName).trigger('change');
                    
                  //  $('#ModalLineName').append('<option value="' + response.lineID + '">' + response.lineID + " : " + response.lineName + '</option>');
                    $('#ModalLineName').val(response.lineID).trigger('change');


                      $('#ModalProductName').val(response.productID).trigger('change');

                      $('#ModalSectionName').val(response.sectionID).trigger('change');

                    $('#ModalFormularID').val(response.formularID).trigger('change');

                    $('#ModalSize').val(response.size);
                    $('#ModalQTYPerQRCode').val(response.qtyPerQRCode);

                    $('#ModalUnit').append('<option value="' + response.unit + '">' + response.unit + '</option>');
                    $('#ModalUnit').val(response.unit).trigger('change');

                    $('#ModalStatus').prop('checked', response.status == 1)
                    $('#EditModal').modal('show');

                }
            },
            error: function (response) {
                alert(response.responseText);
            }

        });
    }




    //Function Inactive
    function InactiveFn(id) {
        $.ajax({
            url: '/Master/PLPSInactive/' + id,
            type: 'GET',
            contentType: 'application/json;charset=UTF-8',
            dataType: 'json',
            success: function (response) {
                location.reload();
                alert("Inactive Finish");
            },
            error: function (response) {
                alert("Inactive something went wrong.");
            }

        });
    }


    
    //Function Inactive
    function ActiveFn(id) {
        $.ajax({
            url: '/Master/PLPSActive/' + id,
            type: 'GET',
            contentType: 'application/json;charset=UTF-8',
            dataType: 'json',
            success: function (response) {
                location.reload();
                alert("Inactive Finish");
            },
            error: function (response) {
                alert("Inactive something went wrong.");
            }

        });
    }


</script>

@* <script>
    $(document).ready(function () {
        $('.selectfillter').select2({
            closeOnSelect: false,
            theme: 'bootstrap-5'
        });

    });
</script> *@

<div class="row" style="height:10px"></div>
<h2 class="page-name">Plant Line Product Section Management</h2>
@* Textbox for search *@

<form method="GET" asp-controller="Master">

    <div style="background-color: #fcfcfc; border-radius: 2px; padding: 10px;" >
        <div class="row">
            <div class="col-2"><label class="FillterLabel">Line Name:</label></div>
            <div class="col-3">
              @*   <select class="selectfillter form-control" style="width:100%" name="LineName" id="LineName">
                    <option value="" default selected></option>
                    @foreach (var item in Model.tbLine)
                    {

                        <option value="@item.LineName" selected="@(item.LineName == ViewBag.SelectedLineName ? "selected" : null)">
                            @Html.DisplayFor(modelItem => item.LineID) : @Html.DisplayFor(modelItem => item.LineName) </option>
                    }
                </select> *@

                 <select class="selectfillter form-control" style="width:100%" name="LineName" id="LineName">
                <option value="" default selected></option>
                    @foreach (var dataGroup in Model.view_PLPS.GroupBy(x => x.LineID))
                {
                    var dataFrist = dataGroup.First(); // Take the first item in the group
                        <option value="@dataFrist.LineName" selected="@(dataFrist.LineName == ViewBag.SelectedLineName ? "selected" : null)">
                        @Html.DisplayFor(modelItem => dataFrist.LineID) : @Html.DisplayFor(modelItem => dataFrist.LineName)
                    </option>

                }
            </select>

 


            </div>
            <div class="col-1"></div>
            <div class="col-2"><label class="FillterLabel">Product Name :</label></div>
            <div class="col-3">
              @*   <select class="selectfillter form-control" style="width:100%" name="ProductName" id="ProductName">
                    <option value="" default selected></option>
                    @foreach (var item in Model.tbProduct)
                    {

                        <option value="@item.ProductName" selected="@(item.ProductName == ViewBag.SelectedProductName ? "selected" : null)">
                            @Html.DisplayFor(modelItem => item.ProductID) : @Html.DisplayFor(modelItem => item.ProductName) </option>
                    }
                </select> *@


                   <select class="selectfillter form-control" style="width:100%" name="ProductName" id="ProductName">
                <option value="" default selected></option>
                    @foreach (var dataGroup in Model.view_PLPS.GroupBy(x => x.ProductID))
                {
                    var dataFrist = dataGroup.First(); // Take the first item in the group
                        <option value="@dataFrist.ProductName" selected="@(dataFrist.ProductName == ViewBag.SelectedProductName ? "selected" : null)">
                        @Html.DisplayFor(modelItem => dataFrist.ProductID) : @Html.DisplayFor(modelItem => dataFrist.ProductName)
                    </option>

                }


            </select>

            </div>

        </div>
        <div class="row" style="height:10px"></div>
        <div class="row">
            <div class="col-2"><label class="FillterLabel"> Section Name:</label></div>
            <div class="col-3">

              @*   <select class="selectfillter form-control" style="width:100%" name="SectionName" id="SectionName">
                    <option value="" default selected></option>
                    @foreach (var item in Model.tbSection)
                    {

                        <option value="@item.SectionName" selected="@(item.SectionName == ViewBag.SelectedSectionName ? "selected" : null)">
                            @Html.DisplayFor(modelItem => item.SectionID) : @Html.DisplayFor(modelItem => item.SectionName) </option>
                    }
                </select> *@


                   <select class="selectfillter form-control" style="width:100%" name="SectionName" id="SectionName">
                <option value="" default selected></option>
                @foreach (var dataGroup in Model.view_PLPS.GroupBy(x => x.SectionID))
                {
                    var dataFrist = dataGroup.First(); // Take the first item in the group
                        <option value="@dataFrist.SectionName" selected="@(dataFrist.SectionName == ViewBag.SelectedSectionName ? "selected" : null)">
                        @Html.DisplayFor(modelItem => dataFrist.SectionID) : @Html.DisplayFor(modelItem => dataFrist.SectionName)
                    </option>

                }
            </select>



            </div>
            <div class="col-1"></div>
            <div class="col-2"></div>
            <div class="col-3">
            </div>

        </div>



        <div class="row" style="height:20px"></div>


        @* //Inactive Checkbox *@
        <div class="row ">
            <div class="col-2" style=" padding-top:0.5em"></div>
            <div class="col-3">
                @{
                    // Determine if the checkbox should be checked based on ViewBag.InactiveStatus
                    string checkedAttribute = (ViewBag.InactiveStatus ?? false) ? "checked" : "";
                }

                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="inactivestatus" name="inactivestatus" @checkedAttribute>
                    <label class="form-check-label" for="inactivestatus">Inactive Status</label>
                    <input type="hidden" id="inactivestatus-hidden" name="inactivestatus" value="@((ViewBag.InactiveStatus ?? false).ToString().ToLower())">
                </div>
            </div>
            <div class="col-6"></div>
        </div>


        <div class="row" style="height:20px"></div>


        <div class="row" style="height:35px">

        <div class="col" style="width:15% ">
            <button id="Clear" type="submit" asp-action="PLPSClear" class="clear-button">
                Clear
            </button>
        </div>
        <div class="col-3" style="width:55% ">
        </div>
        <div class="col" style="width:15% ">
            <button id="Search" type="submit" asp-action="PLPS" class="search-button">
                Search
            </button>
        </div>
        <div class="col" style="width:15% ">
             @if (ViewBag.VBRolePLPS == "Full")
            {
                <button type="button" action="CreatePlant" class="create-button" data-bs-toggle="modal" data-bs-target="#CreateModal">Create</button>

            }
            else
            {
                <button type="button"  class="create-button">Create</button>

            }
            
        </div>
    </div>
    </div>


<br />



<div id="demo_info" class="box"></div>

@*Diaplay data*@
    <table id="table_id" class="table table-hover" style="width:100%">
    <thead style="background-color:gainsboro ">
        <tr>
                <th>
                    PLPS ID
                </th>
            <th>
                Line Name
            </th>
            <th>
                Product Name
            </th>
            <th>
                Section Name
            </th>
          @*   <th class="page-table-head">
                Size
            </th> *@
            <th>
                QTY Per Unit
            </th>
            <th>
                U/M
            </th>

            <th>
                FormularID
            </th>
            <th>
                Status
            </th>
                <th>
                    Edit
                </th>
                <th>
                    Active/Inactive
                </th>

        </tr>
    </thead>
    <tbody>
            @foreach (var item in Model.view_PLPS)
        {
            <tr>
                @Html.HiddenFor(modelItem => item.PLPSID)
                <td id="PLPSID">
                 @Html.DisplayFor(modelItem => item.PLPSID)
                </td>
                <td id="LineName">
                    @Html.DisplayFor(modelItem => item.LineName)
                </td>
                <td id="ProductName">
                    @Html.DisplayFor(modelItem => item.ProductID) :  @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td id="SectionName">
                    @Html.DisplayFor(modelItem => item.SectionID) : @Html.DisplayFor(modelItem => item.SectionName)
                </td>
               @*  <td id="Size" class="page-table-data">
                    @Html.DisplayFor(modelItem => item.Size)
                </td> *@
                <td id="QTYPerQRCode">
                    @Html.DisplayFor(modelItem => item.QTYPerQRCode)
                </td>
                <td id="Unit">
                    @Html.DisplayFor(modelItem => item.Unit)
                </td>

                <td id="Formular">
                    @Html.DisplayFor(modelItem => item.FormularID)
                </td>

                    @if (item.Status == 1)
                    {
                        <td id="Status"> <span id="open">Active</span> </td>
                        <td>
                            @if (ViewBag.VBRolePLPS == "Full")
                            {
                                @*       <a href="#" data-bs-toggle="modal" data-bs-target="#EditModal" id="btnEdit" data-id="@item.IncentiveID" onclick="EditFn(@item.IncentiveID)">Edit</a> *@
                                <a href="#" data-bs-toggle="modal" data-bs-target="#EditModal" id="btnEdit" data-id="@item.PLPSID" onclick="EditFns('@item.PLPSID')">Edit</a>

                            }
                            else
                            {
                                <a href="#" id="btnEdit">Edit</a>

                            }
                        </td>
                        <td>
                            @if (ViewBag.VBRolePLPS == "Full")
                            {
                                <a href="#" id="Inactive" onclick="InactiveFn('@item.PLPSID')">Inactive</a>
                            }
                            else
                            {
                                <a href="#">Inactive</a>
                            }

                        </td>

                    }
                    @if (item.Status == 0)
                    {
                        <td id="Status"><span id="closed" style="color:red">Inactive</span></td>
                        <td>
                            <span id="closed">Edit</span>
                        </td>
                        <td>
                            @if (ViewBag.VBRolePLPS == "Full")
                            {
                                <a href="#" id="Active" onclick="ActiveFn('@item.PLPSID')">Active</a>
                            }
                            else
                            {
                                <a href="#">Active</a>
                            }

                        </td>
                    }

            </tr>
        }
    </tbody>

</table>
    <div class="row" style="height:20px"></div>

    @* /////////////////////////// Export / Import /////////////////////// *@


    <div class="row" style="height:40px">

        <div class="col-3" style="width:70% ">
        </div>
        <div class="col" style="width:15% ">
            @if (ViewBag.VBRolePLPS == "Full")
            {
                <button class="search-button" id="btnExport" type="Submit"  asp-action="PLPSExport" value="export" name="submit">Export</button>
            }
            else
            {
             
                <button type="button" id="btnExportView" class="search-button">Export</button>
            }
        </div>
        <div class="col" style="width:15% ">
            @if (ViewBag.VBRolePLPS == "Full")
            {

                <button type="button" class="clear-button" id="btnSelectFile">Import</button>
                <input type="file" id="FileUpload" name="FileUpload" class="hidden-file-input" style="display: none" />

            }
            else
            {

                <button type="button" id="btnSubmitView" class="clear-button">Import</button>

            }

        </div>
    </div>


</form>


<div class="row" style="height:10px"></div>


@*Modal Edit*@
<div class="modal fade" id="EditModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <form method="post" asp-action="PLPSUpdate" asp-controller="Master">
            <div class="modal-content">
                <div class="modal-header" style="background-color:blue">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Plant Line Product Section Edit</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="recipient-name" class="col-form-label">ProductSTD ID:</label>
                        <input type="text" class="form-control" style="background-color:gainsboro" name="PLPSID" id="ModalPLPSID" readonly>
                    </div>

                    <div class="mb-3">
                        <label class="col-form-label">Line Name:</label>
                        <select class="selectfillter form-control" style="width:100%" list="LineName" name="LineID" id="ModalLineName">
                            @foreach (var item in Model.tbLine.Where(x => x.Status.Equals(1)))
                            {

                                <option value="@item.LineID"> @Html.DisplayFor(modelItem => item.LineID) : @Html.DisplayFor(modelItem => item.LineName) </option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="col-form-label">ProductName Name:</label>
                        <select class="selectfillter form-control" style="width:100%" list="ProductName" name="ProductID" id="ModalProductName">
                            @foreach (var item in Model.tbProduct.Where(x => x.Status.Equals(1)))
                            {

                                <option value="@item.ProductID">@Html.DisplayFor(modelItem => item.ProductID) : @Html.DisplayFor(modelItem => item.ProductName) </option>
                            }
                        </select>

                    </div>

                    <div class="mb-3">
                        <label class="col-form-label">SectionName Name:</label>
                        <select class="selectfillter form-control" style="width:100%" list="SectionName" name="SectionID" id="ModalSectionName">
                            @foreach (var item in Model.tbSection.Where(x=>x.Status.Equals(1)))
                            {

                                <option value="@item.SectionID">@Html.DisplayFor(modelItem => item.SectionID)  : @Html.DisplayFor(modelItem => item.SectionName) </option>
                            }
                        </select>



                    </div>

                    
                     <div class="mb-3">
                        <label class="col-form-label">Formular:</label>
                        <select class="selectfillter form-control" style="width:100%" list="FormularID" name="FormularID" id="ModalFormularID">
                            <option value="" default selected>Please Select ..</option>
                            @foreach (var item in Model.tbFormular)
                            {

                                <option value="@item.FormularID"> @Html.DisplayFor(modelItem => item.FormularID) : @Html.DisplayFor(modelItem => item.FormularName) </option>
                            }
                        </select>

                    </div>
@* 
                       <div class="mb-3">
                        <label for="recipient-name" class="col-form-label">Size:</label>
                        <input class="form-control"  list="Size" name="Size" id="ModalSize" />
                    </div> *@

                    <div class="mb-3">
                        <label for="recipient-name" class="col-form-label">QTY Per Unit:</label>
                        <input class="form-control" list="QTYPerQRCode" name="QTYPerQRCode" id="ModalQTYPerQRCode" />
                    </div>


                    <div class="mb-3">
                        <label for="recipient-name" class="col-form-label">Unit:</label>
                        <select class="selectfillter form-control" style="width:100%" list="Unit" name="Unit" id="ModalUnit">
                            <option value="PCS">PCS </option>
                            <option value="Kgs">Kgs</option>
                            <option value="g">g</option>
                        </select>
                    </div>

                    <div class="form-check form-switch">
                        <input class="form-check-input" rel="active" type="checkbox" id="ModalStatus" name="Status" value="1" checked>
                        <label class="form-check-label" for="flexSwitchCheckChecked">Status</label>

                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="Submit" class="btn btn-primary" id="save">Submit</button>
                </div>

            </div>
        </form>
    </div>
</div>




@*Modal Create*@
<div class="modal fade" id="CreateModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <form method="post" asp-action="PLPSCreate" asp-controller="Master">
            <div class="modal-content">
                <div class="modal-header" style="background-color:blue">
                    <h1 class="modal-title fs-5" id="exampleModalLabel">Plant Line Product Section Create</h1>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">

                    <div class="mb-3">
                        <label class="col-form-label">Line Name:</label>
                        <select class="selectfillter form-control" style="width:100%" list="LineName" name="LineName" id="LineNameCreate" required>
                            <option value="" default selected>Please Select ..</option>

                            @foreach (var item in Model.tbLine.Where(x => x.Status.Equals(1)))
                            {

                                <option value="@item.LineID">@Html.DisplayFor(modelItem => item.LineID)  : @Html.DisplayFor(modelItem => item.LineName) </option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="col-form-label">Product Name:</label>
                        <select class="selectfillter form-control" style="width:100%" list="ProductName" name="ProductName" id="ProductNameCreate" required>
                            <option value="" default selected>Please Select ..</option>
                            @foreach (var item in Model.tbProduct.Where(x => x.Status.Equals(1)))
                            {

                                <option value="@item.ProductID">@Html.DisplayFor(modelItem => item.ProductID) : @Html.DisplayFor(modelItem => item.ProductName) </option>
                            }
                        </select>

                    </div>

                    <div class="mb-3">
                        <label class="col-form-label">Section Name:</label>
                        <select class="selectfillter form-control" style="width:100%" list="SectionName" name="SectionName" id="SectionNameCreate" required>
                            <option value="" default selected>Please Select ..</option>
                            @foreach (var item in Model.tbSection.Where(x => x.Status.Equals(1)))
                            {

                                <option value="@item.SectionID">@Html.DisplayFor(modelItem => item.SectionID) : @Html.DisplayFor(modelItem => item.SectionName) </option>
                            }
                        </select>

                    </div>

                     <div class="mb-3">
                        <label class="col-form-label">Formular:</label>
                        <select class="selectfillter form-control" style="width:100%" list="FormularID" name="FormularID" id="FormularIDCreate" required>
                            <option value="" default selected>Please Select ..</option>
                            @foreach (var item in Model.tbFormular)
                            {

                                <option value="@item.FormularID">@Html.DisplayFor(modelItem => item.FormularID) : @Html.DisplayFor(modelItem => item.FormularName) </option>
                            }
                        </select>

                    </div>


                    @*  <div class="mb-3">
                        <label for="recipient-name" class="col-form-label">Size:</label>
                        <input class="form-control"  list="Size" name="Size" id="SizeCreate" />
                    </div> *@

                    <div class="mb-3">
                        <label for="recipient-name" class="col-form-label">QTY Per QRCode:</label>
                        <input class="form-control" list="QTYPerQRCode" name="QTYPerQRCode" id="QTYPerQRCode" required />
                    </div>
                    <div class="mb-3">
                        <label for="recipient-name" class="col-form-label">Unit:</label>
                        <select class="selectfillter form-control" style="width:100%" list="Unit" name="Unit" id="UnitCreate" required>
                                <option value="PCS">PCS </option>
                            <option value="Kgs">Kgs </option>
                            <option value="g">g </option>
                        </select>
                    </div>

                    <div class="form-check form-switch">
                        <input class="form-check-input" rel="active" type="checkbox" id="StatusCreate" name="Status" value="1" checked>
                        <label class="form-check-label" for="flexSwitchCheckChecked">Status</label>
                    </div>

                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="Submit" class="btn btn-primary" id="save">Submit</button>
                </div>

            </div>
        </form>
    </div>
</div>



<script>

    // Ensure that the checkbox state is included in the form submission
    document.getElementById("inactivestatus").addEventListener("change", function () {
        if (this.checked) {
            // Set the value of the hidden input field to "true" when checked
            document.getElementById("inactivestatus-hidden").value = "true";
        } else {
            // Set the value of the hidden input field to "false" when unchecked
            document.getElementById("inactivestatus-hidden").value = "false";
        }
    });



    
    $(document).ready(function () {
        $('#btnSelectFile').on('click', function () {
            $('#FileUpload').click();
        });

        $('#FileUpload').on('change', function () {
            var selectedFile = this.files[0];

            // Create FormData object
            var formData = new FormData();
            formData.append('FileUpload', selectedFile);  // Use the correct name

            // Send the file to the controller using AJAX
            $.ajax({
                url: '/Master/PLPSUpload',
                type: 'POST',
                processData: false,
                contentType: false,  // Set this to false when using FormData
                data: formData,
                success: function (response) {  // Expecting JSON response
                    if (response.success) {
                        alert(response.message);  // Success message
                        location.reload();  // Reload or do other success-related tasks
                    } else {
                        alert(response.message);  // Error message
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error uploading file:', error);
                    alert('Error uploading file');
                }
            });
        });
    });



    // $(function () {
    //     $("#btnExport").click(function () {
    //         $("#table_id").table2excel({
    //             filename: "Incentive-Master.xls"
    //         });
    //     });
    // });


    
//         $(document).ready(function() {
//         $('#btnExport').click(function () {
//             var $table = $('#table_id');

//         // Clone the table to preserve the original
//         var $clonedTable = $table.clone();

//         // Remove unwanted columns (in this case, remove second column)
//         $clonedTable.find('tr').each(function() {
//                 $(this).find('th:eq(8), td:eq(8)').remove();
//                 $(this).find('th:eq(7), td:eq(7)').remove();
//                // $(this).find('td:eq(8)').remove();

//         });

//         // Export the modified table using table2excel
//         $clonedTable.table2excel({
//             exclude: ".noExl", // Exclude elements with class "noExl"
//             name: "Worksheet Name",
//                 filename: "PLPS-Master"
//         });
//     });
// });


</script>

